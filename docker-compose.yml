version: "3.8"

services:
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql

  app:
    depends_on:
      - mysqldb
    build: ./pedro-cros-spring-app
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false&createDatabaseIfNotExist=true",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
        "spring.jpa.hibernate.ddl-auto" : "create"
      }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

#  sonarqube:
#    image: sonarqube:community
#    depends_on:
#      - postgresql
#    environment:
#      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
#      SONAR_JDBC_USERNAME: sonar
#      SONAR_JDBC_PASSWORD: sonar
#    volumes:
#      - sonarqube_data:/opt/sonarqube/data
#      - sonarqube_extensions:/opt/sonarqube/extensions
#      - sonarqube_logs:/opt/sonarqube/logs
#    ports:
#      - "9000:9000"

#  postgresql:
#    image: postgres:12
#    environment:
#      POSTGRES_USER: sonar
#      POSTGRES_PASSWORD: sonar
#    volumes:
#      - postgresql:/var/lib/postgresql
#      - postgresql_data:/var/lib/postgresql/data

volumes:
  db:
#  sonarqube_data:
#  sonarqube_extensions:
#  sonarqube_logs:
#  postgresql:
#  postgresql_data:
